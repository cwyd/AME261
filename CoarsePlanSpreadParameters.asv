%   =======================================================================
% 	CoarsePlaneSpreadParameters.m
%   =======================================================================
%   PARENT SCRIPT
%
%   PROGRAM INFORMATION
%   Author:     Gabriel Calub
%   Date:       03/26/2023
%   Version:    4.4
%   References: 1.
%               2.
%
%   Trade study script used to create rough plane parameters for each
%   subteam to target in matching design requirements.
%
%   TO-DO:
%       Several functions output vectors. Which values to look at?
%
%   Documentation: https://docs.google.com/document/d/1s04e2THURuhZ66hpbRJmpVLHB_bnvNXdhlUeKBF3msU/edit
%
clc; clear; close all;

%% DESIGN INPUTS
C_D0            = 0.0202;
C_Lmax          = 2;
W_craft         = 41005;
e               = 0.87;
W_fuel          = 4188;
W_battery       = 1000;
S               = 100;
b               = 10;
Cg              = 5;
t_c             = 1;
lambda          = 10;
P_maxSL         = 2160;
T               = 3; % Remove since we are using a prop plane
P_maxBattery    = 50;
eta_prop        = 0.86;
d_wing_ground   = 10; % Distance from wing to ground
SFC_P           = 1; % Specific fuel consumption
h_battery       = 1;
eta_battery     = 1;
phi             = 1; % Bank angle
mu_r            = 1;
wingDistFromGround = 1;
engineNumber    = 2;
cruiseAlt = 50;

%% DESIGN REQUIREMENTS
X_Clmax_req    = [0, 1];
x_hv_req        = [0, 1];
dG_req          = [0, 1];
dLo_req         = [0, 1];
emissions_req   = [0, 1];
turning_req     = [0, 1]; 
ground_req      = [0, 1];

%% COMPUTATIONS
% Initial Calculations - What flying altitude? And does it change for each
% computation?
AR = b^2/S;
h = 1;

% Weights
W_0 = W_fuel+W_battery+W_craft;
W_1 = W_0 - W_fuel;

% Drag - Which value to isolate from drag?
[velocityVec, DincVec, DcompVec] = computedragPROPS(h, W_0, S, b, C_D0, e, t_c, lambda, false);

% Power - Which value to isolate?
h = cruiseAlt;
[P_R, PA, P_Rmin, v] = computePowerPROPS(h, C_D0, e, S,b, C_Lmax, W_0, P_maxSL, eta_prop);

% Range - What CL to use?
CL = 1;
range = computeRangeBATT(eta_prop, h_battery, C_D0, e, AR, CL, W_battery, W_0);

% Emissions

% Rate of Climb - What weight to use, and what throttle setting?
throttleSetting = 1;
[velocityVec, RoCVec] = computeRateOfClimbPROPS(h, W_0, P_maxSL, throttleSetting, eta_prop, C_D0, e, AR, S, false);

% Endurances of Prop - What CL to use?
V = 1;
endurance_Clh = computeEndurancePROPS([C_Lmax, h], W_0, W_1, SFC_P, eta_prop, e, S, AR, C_D0, 'constantCLh');
endurance_Clv = computeEndurancePROPS([C_Lmax, V], W_0, W_1, SFC_P, eta_prop, e, S, AR, C_D0, 'constantCLV');
endurance_hv  = computeEndurancePROPS([h, V], W_0, W_1, SFC_P, eta_prop, e, S, AR, C_D0, 'constanthV');

% Takeoff
hAirport = 0;
P_maxSLOneEngine = P_maxSL/engineNumber;
dLo = computeDLO(W_0, hAirport, C_D0, e, AR, S, b, C_Lmax, mu_r, wingDistFromGround, P_maxSL, eta_prop);
TOFL = computeTakeoffFieldLength(W_0, hAirport, S, C_Lmax, throttleSetting, P_maxSLOneEngine);

% Landing
groundRoll = computeGroundRoll(W_1, hAirport, C_D0, e, AR, S, b, C_Lmax, mu_r, wingDistFromGround);
landingFieldLength = computeLandingFieldLength(W_1, hAirport, C_D0, e, AR, S, b, C_Lmax, mu_r, wingDistFromGround);

% Turning Performance Calcs

% Stability (static margin)

%% OUTPUT
test = '| OK'
test2 = ("| OFF BY " + groundRoll)
fprintf("====== FINAL PLANE PARAMETERS =========\n")
fprintf("Takeoff Weight:        %0.2f lbs %s \n", W_0, test)
fprintf("Landing Weight:        %0.2f lbs %s \n", W_1, test2)
fprintf("Minimum Drag:          %0.2f lbs\n", min(DincVec))
fprintf("Minimum Power:         %0.2f lbs-ft/sec \n", P_R)
fprintf("Range:                 %0.2f \n", range)
fprintf("Maximum Rate of Climb: %0.2f %s \n", max(RoCVec))

